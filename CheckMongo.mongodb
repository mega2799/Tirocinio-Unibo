// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'tirocinio';
const collection = 'NEW_COLLECTION_NAME';

// The current database to use.
use(database);

// Create a new collection

db.post.aggregate(
  [
    {
      /**
       * path: Path to the array field.
       * includeArrayIndex: Optional name for index.
       * preserveNullAndEmptyArrays: Optional
       *   toggle to unwind null and empty values.
       */
      $unwind: {
        path: "$Post"
      }
    },
    {
      $match: {
        "Post.A1" : 1
      }
    },
    {
      $count: "total"
    }
  ]
)

db.post.aggregate(
  [
    {
      $unwind : {
        path : "$Post"
      }
    },
    {
      /**
       * query: The query in MQL.
       */
      $match: {
        "Post.AK" : 1
      }
    }
  ]
)

db.mediumRelation.aggregate(
  [
     {
      $match: {
        "A1" : 412
      }
    },
    {
      $count : "tot"
    }
  ]
)

// db.mediumRelation.aggregate(
//   [
//      {
//       $match: {
//         "A1" :  
//       }
//     },
//     {
//       $count : "tot"
//     } 
//   ]
// )


db.mediumRelation.aggregate(
  [
    {
      $match: {
        // "AK" : {$exists : true}
        "AK" : 23
      }
    }
  ]
)

db.mediumRelation.aggregate(
  [
     {
      $match: {
        "A3" : 9
      }
    },
    {
      $count : "tot"
    }
  ]
)

db.mediumRelation.aggregate(
  [
    {
      $match : {
        "BK" : {$exists : true}
      }
    },
    {
      $project : 
      {
        "_id" : 0,
        "BK" : 1
      }
    },
    {
      $sample: {
        size: 10
      }
    }
  ]
)

// var bho = db.mediumRelation.aggregate(
//   [
//     {
//       $match : {
//         "AK" : {$exists : true}
//       }
//     },
//     {
//       $project : 
//       {
//         "_id" : 1,
//         "AK" : 1
//       }
//     },
//     {
//       $sample: {
//         size: 1
//       }
//     }
//   ]
// )

// cacca = bho.toArray()
// cacca[0]._id


// var child = db.mediumRelation.aggregate(
//   [
//     {
//       $match : {
//         "BK" : {$exists : true}
//       }
//     },
//     {
//       $project : 
//       {
//         "_id" : 1,
//         "BK" : 1
//       }
//     },
//     {
//       $sample: {
//         size: 10
//       }
//     }
//   ]
// )


// childList = child.toArray()
// // childList
// // childList.forEach(function(i){print(i._id)})
// // childList[4]._id

// db.mediumRelation.aggregate(
//   [
//     {
//       $match : {
//         "AK" : {$exists : true}
//       }
//     },
//     {
//       $project : 
//       {
//         "_id" : 1,
//         "AK" : 1
//       }
//     },
//     // {
//       // $sample: {
//         // size: 1
//       // }
//     // },
//     {
//       $addFields: {
//         "BK": childList 
//       }
//     }
//   ]
// )


// Query per ottenere referencing di B in A

db.relation.aggregate(
  [
    {
      $project : {
        "_id" : 0,
        "FAK" : 1,
        "BK" : 1
      }
    },
    {
      $match: {
        "BK" : {$exists : true}
      }
    },
    {
      /**
       * size: The number of documents to sample.
       */
      $sample: {
        size: 3
      }
    },
    {
      /**
       * from: The target collection.
       * localField: The local join field.
       * foreignField: The target join field.
       * as: The name for the results.
       * pipeline: The pipeline to run on the joined collection.
       * let: Optional variables to use in the pipeline field stages.
       */
      $lookup: {
        from: 'relation',
        localField: 'FAK',
        foreignField: 'AK',
        as: 'arr'
      }
    },
    {
      $unwind : "$arr"
    },
    {
      /**
       * specifications: The fields to
       *   include or exclude.
       */
      $project: {
        "FAK" : 0,
        "arr._id" : 0
      }
    },{
      /**
       * specifications: The fields to
       *   include or exclude.
       */
      $project: {
        "AK" : "$arr.AK",
        "BK" : "$BK",
        "A1" : "$arr.A1",
        "A2" : "$arr.A2",
        "A3" : "$arr.A3",
        "A4" : "$arr.A4",
        "A5" : "$arr.A5",
        "A6" : "$arr.A6",
        "A7" : "$arr.A7",
      }
    }
  ]
)
